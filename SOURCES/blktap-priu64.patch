diff --git a/drivers/td-req.c b/drivers/td-req.c
index c409750..a56786e 100644
--- a/drivers/td-req.c
+++ b/drivers/td-req.c
@@ -294,7 +294,7 @@ xenio_blkif_put_response(struct td_xenblkif * const blkif,
             if (err < 0) {
                 err = -errno;
                 if (req) {
-                    RING_ERR(blkif, "req %lu: failed to notify event channel: "
+                    RING_ERR(blkif, "req %" PRIu64 ": failed to notify event channel: "
                             "%s\n", req->msg.id, strerror(-err));
                 } else {
                     RING_ERR(blkif, "failed to notify event channel: %s\n",
@@ -394,7 +394,7 @@ guest_copy2(struct td_xenblkif * const blkif,
 			 * xen/extras/mini-os/include/gnttab.h (header not available to
 			 * user space)
 			 */
-			RING_ERR(blkif, "req %lu: failed to grant-copy segment %d: %d\n",
+			RING_ERR(blkif, "req %" PRIu64 ": failed to grant-copy segment %d: %d\n",
                     tapreq->msg.id, i, gcopy_seg->status);
 			err = -EIO;
 			goto out;
@@ -427,7 +427,7 @@ guest_copy2(struct td_xenblkif * const blkif,
 	if (unlikely(!raddr)) {
 		err = -errno;
 		ASSERT(err);
-		RING_ERR(blkif, "failed to grant-map request %lu: %s\n", req->msg.id,
+		RING_ERR(blkif, "failed to grant-map request %" PRIu64 ": %s\n", req->msg.id,
 				strerror(-err));
 		goto out;
 	}
@@ -447,7 +447,7 @@ guest_copy2(struct td_xenblkif * const blkif,
 	if (unlikely(err)) {
 		err = -errno;
 		ASSERT(err);
-		RING_ERR(blkif, "failed to grant-unmap request %lu: %s\n", req->msg.id,
+		RING_ERR(blkif, "failed to grant-unmap request %" PRIu64 ": %s\n", req->msg.id,
 				strerror(-err));
 	}
 
@@ -517,7 +517,7 @@ tapdisk_xenblkif_complete_request(struct td_xenblkif * const blkif,
 				_err = guest_copy2(blkif, tapreq);
 				if (unlikely(_err)) {
 					err = _err;
-					RING_ERR(blkif, "req %lu: failed to copy from/to guest: "
+					RING_ERR(blkif, "req %" PRIu64 ": failed to copy from/to guest: "
 							"%s\n", tapreq->msg.id, strerror(-err));
 				}
 			}
@@ -650,7 +650,7 @@ tapdisk_xenblkif_parse_request(struct td_xenblkif * const blkif,
          * must be transferred.
          */
         if (seg->last_sect < seg->first_sect) {
-            RING_ERR(blkif, "req %lu: invalid sectors %d-%d\n",
+            RING_ERR(blkif, "req %" PRIu64 ": invalid sectors %d-%d\n",
                     req->msg.id, seg->first_sect, seg->last_sect);
             err = EINVAL;
             goto out;
@@ -698,7 +698,7 @@ tapdisk_xenblkif_parse_request(struct td_xenblkif * const blkif,
     if (blkif_rq_wr(&req->msg)) {
         err = guest_copy2(blkif, req);
         if (err) {
-            RING_ERR(blkif, "req %lu: failed to copy from guest: %s\n",
+            RING_ERR(blkif, "req %" PRIu64 ": failed to copy from guest: %s\n",
                     req->msg.id, strerror(-err));
             goto out;
         }
@@ -761,7 +761,7 @@ tapdisk_xenblkif_make_vbd_request(struct td_xenblkif * const blkif,
         vreq->op = TD_OP_WRITE;
         break;
     default:
-        RING_ERR(blkif, "req %lu: invalid request type %d\n",
+        RING_ERR(blkif, "req %" PRIu64 ": invalid request type %d\n",
                 tapreq->msg.id, tapreq->msg.operation);
         err = EOPNOTSUPP;
         goto out;
@@ -773,7 +773,7 @@ tapdisk_xenblkif_make_vbd_request(struct td_xenblkif * const blkif,
     if (unlikely((tapreq->msg.nr_segments == 0 &&
                 tapreq->msg.operation != BLKIF_OP_WRITE_BARRIER) ||
             tapreq->msg.nr_segments > BLKIF_MAX_SEGMENTS_PER_REQUEST)) {
-        RING_ERR(blkif, "req %lu: bad number of segments in request (%d)\n",
+        RING_ERR(blkif, "req %" PRIu64 ": bad number of segments in request (%d)\n",
                 tapreq->msg.id, tapreq->msg.nr_segments);
         err = EINVAL;
         goto out;
